 --------------- Objective ---------------

Series of JavaScript Exercises Focusing on different 
asynchronous programming techniques such as callbacks, 
promises, and async/await while integrating API calls to display Data




------------------------------------------------------------ 👍👍👍 CallBacks 👍👍👍 -----------------------------------------------------


Part - 1

-------- HTML CSS --------

 ---- callBacks.html  ----------------------------------------------------------------------------------------------------------------- Done 👍
 ---- Styling and designing  ---------------------------------------------------------------------------------------------------------- Done 👍




-------- callBack Implementation --------

--- Button and div element in html file ---------------------------------------------------------------------------------------------- Done 👍
--- functionality that utilize callback function to simulate a delay of 5 seconds when the button is clicked. ------------------------ Done 👍
--- update the text in the div element to display "Callback executed after 5 seconds after the delay." ------------------------------- Done 👍



-------- Fetch Data from API --------

Modify the callback implementation to fetch data from the JSONPlaceholder(API (POSTS endpoint) : - https://dummyjson.com/posts )
Display the fetched data (post titles) in the div element after the callBack is executed.




------------------------------------------------------------ 👍👍👍 Promises 👍👍👍 ------------------------------------------------------------


Part - 2


-------- HTML CSS --------

 ---- promises.html ----------------------------------------------------------------------------------------------------------------- Done 👍
 ---- Styling and designing --------------------------------------------------------------------------------------------------------- Done 👍



 -------- promises Implementation --------

--- Button and div element in html file --------------------------------------------------------------------------------------------- Done 👍
--- functionality that creates a promise to fetch the JSONPlaceholder (API (POSTS endpoint) : - https://dummyjson.com/posts) -------- Done 👍
--- Display "Loading..." in the div element while the Promise is pending and -------------------------------------------------------- Done 👍
    update the text to show the fetched data once the Promise is resolved. ---------------------------------------------------------- Done 👍


     
-------- Error Handling --------

--- focus on error handling. -------------------------------------------------------------------------------------------------------- Done 👍
--- if promise take longer than 5s to resolve reject it with message like Operation timed out --------------------------------------- Done 👍
--- Display the error message if promise is rejected. ------------------------------------------------------------------------------- Done 👍





------------------------------------------------------------ Async-Await ------------------------------------------------------------


Part - 3


-------- HTML CSS --------

 ---- promises.html ----------------------------------------------------------------------------------------------------------------------------👍
 ---- Styling and designing --------------------------------------------------------------------------------------------------------------------👍



-------- Async/Await Implementation --------

--- Button and div element in html file --------------------------------------------------------------------------------------------------------👍
--- functionality that uses async/await to fetch data from the JSONPlaceholder (API (POSTS endpoint) : - https://dummyjson.com/posts) ----------👍
---  Display "Loading..." in the div element while the data is being fetched and  --------------------------------------------------------------👍
     update the text to show the fetched data once it is received. -----------------------------------------------------------------------------👍



-------- Error Handling --------

--- error handling in the async/await implementation. ------------------------------------------------------------------------------------------👍
--- Handle errors such as network issues or timeouts gracefully and display error messages in the div element  ---------------------------------👍
